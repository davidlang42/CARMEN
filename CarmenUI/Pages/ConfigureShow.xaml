<local:SubPage
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
    x:Class="CarmenUI.Pages.ConfigureShow"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:CarmenUI.Pages"
    xmlns:uc="clr-namespace:CarmenUI.UserControls"
    xmlns:cv="clr-namespace:CarmenUI.Converters"
    xmlns:modelCriterias="clr-namespace:Carmen.ShowModel.Criterias;assembly=Carmen.ShowModel"
    xmlns:modelRequirements="clr-namespace:Carmen.ShowModel.Requirements;assembly=Carmen.ShowModel"
    xmlns:modelStructure="clr-namespace:Carmen.ShowModel.Structure;assembly=Carmen.ShowModel"
    xmlns:modelApplicants="clr-namespace:Carmen.ShowModel.Applicants;assembly=Carmen.ShowModel"
    mc:Ignorable="d"
    d:DesignHeight="600" d:DesignWidth="800"
    Title="Configure Show" Loaded="Page_Loaded">
    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="booleanToVisibility"/>
        <CollectionViewSource x:Key="alternativeCastsViewSource"/>
        <CollectionViewSource x:Key="criteriasSelectionSource"/>
        <CollectionViewSource x:Key="castGroupsViewSource"/>
        <CollectionViewSource x:Key="tagsSelectionSource"/>
        <CollectionViewSource x:Key="requirementsSelectionSource"/>
        <cv:SparseCountByGroups x:Key="sparseCountByGroups"/>
        <cv:InvertBoolean x:Key="inverseBoolean"/>
        <ObjectDataProvider x:Key="genderEnumValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="modelApplicants:Gender"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <CollectionViewSource x:Key="listSortDirectionEnumSource"/>
        <cv:MinimumIntValue x:Key="minimumIntValue"/>
    </Page.Resources>
    <Grid Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="*" MinWidth="275"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <DockPanel Margin="5">
            <TextBlock DockPanel.Dock="Top" Text="Configuration" FontSize="22"/>
            <ListBox x:Name="configList" FontSize="16" BorderThickness="0">
                <ListBoxItem Selected="ShowRoot_Selected">
                    <TextBlock Text="Show details..."/>
                </ListBoxItem>
                <ListBoxItem Selected="Criteria_Selected">
                    <TextBlock Text="Audition cast based on..."/>
                </ListBoxItem>
                <ListBoxItem Selected="CastGroups_Selected">
                    <TextBlock Text="Select cast into..."/>
                </ListBoxItem>
                <ListBoxItem Selected="AlternativeCasts_Selected">
                    <TextBlock Text="With alternating casts..."/>
                </ListBoxItem>
                <ListBoxItem Selected="Tags_Selected">
                    <TextBlock Text="Apply tags to cast members..."/>
                </ListBoxItem>
                <ListBoxItem Selected="SectionTypes_Selected">
                    <TextBlock Text="Structure items into..."/>
                </ListBoxItem>
                <ListBoxItem Selected="Requirements_Selected">
                    <TextBlock Text="Allocate roles based on..."/>
                </ListBoxItem>
                <ListBoxItem IsEnabled="False">
                    <TextBlock Text="Import settings from..." FontStyle="Italic" TextDecorations="Strikethrough"/>
                </ListBoxItem>
            </ListBox>
        </DockPanel>
        <DockPanel Grid.Column="1" Margin="5">
            <TextBlock DockPanel.Dock="Top" x:Name="objectHeading" FontSize="22"/>
            <ItemsControl DockPanel.Dock="Bottom" x:Name="objectAddButtons" KeyboardNavigation.IsTabStop="False">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel KeyboardNavigation.IsTabStop="False"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ItemsControl DockPanel.Dock="Bottom" ItemsSource="{Binding}" KeyboardNavigation.IsTabStop="False">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Rows="1" KeyboardNavigation.IsTabStop="False"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Button Click="AddObjectButton_Click">
                                        <TextBlock Text="{Binding AddButtonText}" TextWrapping="Wrap" HorizontalAlignment="Center" Margin="5"/>
                                    </Button>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <ListBox x:Name="objectList" FontSize="16" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     KeyUp="objectList_KeyUp">
                <ListBox.Resources>
                    <DataTemplate DataType="{x:Type modelStructure:ShowRoot}">
                        <TextBlock Text="Details for the current show"/>
                    </DataTemplate>
                </ListBox.Resources>
            </ListBox>
        </DockPanel>
        <DockPanel Grid.Column="2" Margin="5" DataContext="{Binding ElementName=objectList,Path=SelectedItem}">
            <TextBlock DockPanel.Dock="Top" Text="{Binding Name, StringFormat='Editing: \{0\}'}" FontSize="22"/>
            <ContentControl Content="{Binding}" KeyboardNavigation.IsTabStop="False">
                <ContentControl.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="0 0 0 5"/>
                        <Setter Property="FontSize" Value="14"/>
                    </Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Margin" Value="5 0 0 5"/>
                        <Setter Property="FontSize" Value="14"/>
                    </Style>
                    <Style TargetType="CheckBox">
                        <Setter Property="Margin" Value="5 0 0 5"/>
                        <Setter Property="FontSize" Value="14"/>
                    </Style>
                    <Style TargetType="ComboBox">
                        <Setter Property="Margin" Value="5 0 0 5"/>
                        <Setter Property="FontSize" Value="14"/>
                    </Style>
                    <DataTemplate DataType="{x:Type modelCriterias:NumericCriteria}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is a numeric criteria, for which an Applicant can be given a whole number mark between 0 and a maximum value, inclusive.
                                If set to primary, this criteria will be shown on the role allocation screen and must be entered for every applicant.
                                The weight specifies the importantance of this criteria in calculating applicants overall ability.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <CheckBox Grid.Row="2" Grid.Column="1" IsChecked="{Binding Primary}" FontSize="14" Content="Primary" VerticalContentAlignment="Center"/>
                            <TextBlock Grid.Row="3" Text="Weight" FontSize="14"/>
                            <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding Weight}" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="Maximum" FontSize="14"/>
                            <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding MaxMark}" FontSize="14"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelCriterias:SelectCriteria}">
                        <Grid Margin="0 5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14" Margin="0 0 0 5">
                                This is a list criteria, for which an Applicant can be marked as having a value selected from a list.
                                The 'mark' an Applicant receives for a list criteria is a number representing the position of the selected value within the list, where the 1st option is 0.
                                The maximum this 'mark' will be is N-1, where N is the number of options.
                                If set to primary, this criteria will be shown on the role allocation screen and must be entered for every applicant.
                                The weight specifies the importantance of this criteria in calculating applicants overall ability.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Grid.ColumnSpan="2" TextWrapping="Wrap" FontStyle="Italic" FontSize="12"  Margin="0 0 0 10">
                                NOTE: Changing or re-ordering the options for this criteria is only changing the text which is shown, the Applicant's 'mark' number is not updated when the options are changed, so care must be taken when updating this criteria after Applicant's marks have been entered.
                            </TextBlock>
                            <TextBlock Grid.Row="2" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Name}" Margin="5 0 0 5" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" FontSize="14" Content="Primary" VerticalContentAlignment="Center"/>
                            <TextBlock Grid.Row="4" Text="Weight" FontSize="14"/>
                            <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding Weight}" FontSize="14"/>
                            <uc:EditableList Grid.Row="5" Grid.ColumnSpan="2" FontSize="14" Title="List of options:" MinimumCount="2" ItemsSource="{Binding ElementName=objectList, Path=SelectedItem.Options, Mode=TwoWay}"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelCriterias:BooleanCriteria}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is a tick criteria, like a Yes/No question, for which an Applicant can either be marked Yes or No.
                                If set to primary, this criteria will be shown on the role allocation screen and must be entered for every applicant.
                                The weight specifies the importantance of this criteria in calculating applicants overall ability.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <CheckBox Grid.Row="2" Grid.Column="1" IsChecked="{Binding Primary}" FontSize="14" Content="Primary" VerticalContentAlignment="Center"/>
                            <TextBlock Grid.Row="3" Text="Weight" FontSize="14"/>
                            <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding Weight}" FontSize="14"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelApplicants:CastGroup}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                During the cast selection process, Applicants will be selected into a Cast Group.
                                Each Applicant can be in only one Cast Group, and not being in a Cast Group is an indication of an Applicant being rejected.
                                At least one Cast Group, such as the default Cast Group called "Cast", is required.
                                NOTE: In order to alternate casts, at least 2 alternative casts must be defined.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Abbreviation" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Abbreviation}" FontSize="14"/>
                            <TextBlock Grid.Row="3" Text="Required Count" FontSize="14"/>
                            <Grid Grid.Row="3" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Text="{Binding RequiredCount}" FontSize="14"/>
                                <TextBlock Grid.Column="1" Text="{Binding Source={StaticResource alternativeCastsViewSource}, Path=Count, StringFormat=' x {0}'}"
                                           Visibility="{Binding AlternateCasts, Converter={StaticResource booleanToVisibility}}"
                                           FontSize="14"/>
                            </Grid>
                            <CheckBox Grid.Row="4" Grid.Column="1" IsChecked="{Binding AlternateCasts}" FontSize="14" Content="Alternate Casts" VerticalContentAlignment="Center"
                                      IsEnabled="{Binding Source={StaticResource alternativeCastsViewSource}, Path=Count, Converter={StaticResource minimumIntValue}, ConverterParameter=2}"/>
                            <TextBlock Grid.Row="5" Text="Requirements" FontSize="14"/>
                            <TextBlock Grid.Row="5" Grid.Column="1" Text="TODO" FontSize="14"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelApplicants:AlternativeCast}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                If any Cast Groups are set to "Alternate Casts" then these Alternative Casts are the casts which they alternate between.
                                There must be at least two Alternative Casts in order to enable "Alternate Casts" on a Cast Group.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14" LostFocus="Name_LostFocus"/>
                            <TextBlock Grid.Row="2" Text="Initial" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Initial}" FontSize="14"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelApplicants:Tag}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                A tag can be applied to a successful Applicant to indicate that form part of a special team, or have an external attribute, such as wearing a microphone. An Applicant can have many tags.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14" LostFocus="Name_LostFocus"/>
                            <TextBlock Grid.Row="2" Text="Description" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Description}" FontSize="14"/>
                            <TextBlock Grid.Row="3" Text="Requirements" FontSize="14"/>
                            <TextBlock Grid.Row="3" Grid.Column="1" Text="TODO" FontSize="14"/>
                            <TextBlock Grid.Row="4" Grid.ColumnSpan="2" Text="Required Counts:" FontSize="14"/>
                            <ItemsControl Grid.Row="5" Grid.ColumnSpan="2" ItemsSource="{Binding CountByGroups, Converter={StaticResource sparseCountByGroups}, ConverterParameter={StaticResource castGroupsViewSource}}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="1"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding CastGroup.Name}" FontSize="14"/>
                                            <TextBox Grid.Column="1" Text="{Binding Count, TargetNullValue=''}" FontSize="14"/>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelStructure:SectionType}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This defines a type of Section which can be used to add structure to the items in your show.
                                This allows the show structure to match your chosen terminology, but also to contain different business logic about the number of roles per person within a Section.
                                At least one Section Type, such as the default Section Type called "Section", is required.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14" LostFocus="Name_LostFocus"/>
                            <CheckBox Grid.Row="2" Grid.ColumnSpan="2" IsChecked="{Binding AllowNoRoles, Converter={StaticResource inverseBoolean}}" FontSize="14" Content="Everyone must have a role" VerticalContentAlignment="Center"/>
                            <CheckBox Grid.Row="3" Grid.ColumnSpan="2" IsChecked="{Binding AllowMultipleRoles}" FontSize="14" Content="A person can have multiple roles" VerticalContentAlignment="Center"/>
                            <CheckBox Grid.Row="4" Grid.ColumnSpan="2" IsChecked="{Binding AllowConsecutiveItems, Converter={StaticResource inverseBoolean}}" FontSize="14" Content="Avoid roles in consecutive items" VerticalContentAlignment="Center"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelStructure:ShowRoot}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="DatePicker">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is the root block of show settings, which define your show.
                                The show date will be used to calculate the age of applicants.
                                The cast number order option allows you to pick which Audition Criteria is used to determine the automatic cast numbering order. If no Audition Criteria has been set, cast numbers will be allocated based on each applicant's overall ability level.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Show Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Show Date" FontSize="14" VerticalAlignment="Center"/>
                            <DatePicker Grid.Row="2" Grid.Column="1" SelectedDate="{Binding ShowDate}" FontSize="14"/>
                            <TextBlock Grid.Row="3" Text="Cast Number Order" FontSize="14" VerticalAlignment="Center"/>
                            <ComboBox Grid.Row="3" Grid.Column="1" FontSize="14" SelectedItem="{Binding CastNumberOrderBy, TargetNullValue='Overall ability'}" DisplayMemberPath="Name">
                                <ComboBox.Resources>
                                    <DataTemplate DataType="{x:Type modelCriterias:Criteria}">
                                        <TextBlock Text="{Binding Path=Name}"/>
                                    </DataTemplate>
                                </ComboBox.Resources>
                                <ComboBox.ItemsSource>
                                    <CompositeCollection >
                                        <sys:String>Overall ability</sys:String>
                                        <CollectionContainer Collection="{Binding Source={StaticResource criteriasSelectionSource}}"/>
                                    </CompositeCollection>
                                </ComboBox.ItemsSource>
                            </ComboBox>
                            <TextBlock Grid.Row="4" Text="Cast Number Direction" FontSize="14" VerticalAlignment="Center"/>
                            <ComboBox Grid.Row="4" Grid.Column="1" SelectedItem="{Binding CastNumberOrderDirection}" ItemsSource="{Binding Source={StaticResource listSortDirectionEnumSource}}" FontSize="14"/>
                            <CheckBox Grid.Row="5" Grid.ColumnSpan="2" IsChecked="{Binding AllowConsecutiveItems, Converter={StaticResource inverseBoolean}}" FontSize="14" Content="Avoid roles in consecutive items" VerticalContentAlignment="Center"/>
                            <TextBlock Grid.Row="6" Text="Logo" FontSize="14"/>
                            <TextBlock Grid.Row="6" Grid.Column="1" Text="TODO" FontSize="14"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelRequirements:AbilityExactRequirement}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                    <Setter Property="FontSize" Value="14"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                    <Setter Property="FontSize" Value="14"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is an Exact Ability requirement, which means that an Applicant must have a specific Mark in the specified Criteria.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Reason" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Reason}" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" Content="Primary" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="Criteria" FontSize="14"/>
                            <ComboBox Grid.Row="4" Grid.Column="1" FontSize="14" SelectedItem="{Binding Criteria}" ItemsSource="{Binding Source={StaticResource criteriasSelectionSource}}" DisplayMemberPath="Name" />
                            <TextBlock Grid.Row="5" Text="Required Value" FontSize="14"/>
                            <uc:CriteriaMarkSelector Grid.Row="5" Grid.Column="1" Mark="{Binding RequiredValue, Mode=TwoWay}" Criteria="{Binding Criteria}" VerticalAlignment="Center"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelRequirements:AbilityRangeRequirement}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                    <Setter Property="FontSize" Value="14"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                    <Setter Property="FontSize" Value="14"/>
                                </Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                    <Setter Property="FontSize" Value="14"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is an Ability Range requirement, which means that an Applicant must have a Mark within a range for the specified Criteria.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Reason" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Reason}" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" Content="Primary" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="Criteria" FontSize="14"/>
                            <ComboBox Grid.Row="4" Grid.Column="1" FontSize="14" SelectedItem="{Binding Criteria}" ItemsSource="{Binding Source={StaticResource criteriasSelectionSource}}" DisplayMemberPath="Name"/>
                            <TextBlock Grid.Row="5" Text="Minimum" FontSize="14"/>
                            <uc:CriteriaMarkSelector Grid.Row="5" Grid.Column="1" Mark="{Binding Minimum, Mode=TwoWay}" Criteria="{Binding Criteria}" VerticalAlignment="Center"/>
                            <TextBlock Grid.Row="6" Text="Maximum" FontSize="14"/>
                            <uc:CriteriaMarkSelector Grid.Row="6" Grid.Column="1" Mark="{Binding Maximum, Mode=TwoWay}" Criteria="{Binding Criteria}" VerticalAlignment="Center"/>
                            <CheckBox Grid.Row="7" Grid.Column="1" VerticalContentAlignment="Center" Content="Higher is better" IsChecked="{Binding ScaleSuitability}"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelRequirements:AgeRequirement}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                    <Setter Property="FontSize" Value="14"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                    <Setter Property="FontSize" Value="14"/>
                                </Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                    <Setter Property="FontSize" Value="14"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is an Age requirement, which means that an Applicant must have an age within the specified range.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Reason" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Reason}" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" Content="Primary" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="Minimum" FontSize="14"/>
                            <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding Minimum, TargetNullValue=''}" FontSize="14"/>
                            <TextBlock Grid.Row="5" Text="Maximum" FontSize="14"/>
                            <TextBox Grid.Row="5" Grid.Column="1" Text="{Binding Maximum, TargetNullValue=''}" FontSize="14"/>
                            <CheckBox Grid.Row="6" Grid.Column="1" VerticalContentAlignment="Center" Content="Higher is better" IsChecked="{Binding ScaleSuitability}"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelRequirements:GenderRequirement}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is a Gender requirement, which means that an Applicant must be the specified gender.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Reason" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Reason}" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" Content="Primary" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="Gender" FontSize="14"/>
                            <ComboBox Grid.Row="4" Grid.Column="1" SelectedIndex="{Binding RequiredValue}" ItemsSource="{Binding Source={StaticResource genderEnumValues}}"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelRequirements:TagRequirement}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is a Tag requirement, which means that an Applicant must be assigned the specified tag.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Reason" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Reason}" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" Content="Primary" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="Tag" FontSize="14"/>
                            <ComboBox Grid.Row="4" Grid.Column="1" SelectedItem="{Binding RequiredTag}" ItemsSource="{Binding Source={StaticResource tagsSelectionSource}}" DisplayMemberPath="Name"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelRequirements:NotRequirement}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is a NOT requirement, which means that an Applicant must not meet the specified requirement.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Reason" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Reason}" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" Content="Primary" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="NOT" FontSize="14"/>
                            <ComboBox Grid.Row="4" Grid.Column="1" SelectedItem="{Binding SubRequirement}" ItemsSource="{Binding Source={StaticResource requirementsSelectionSource}}" DisplayMemberPath="Name"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelRequirements:AndRequirement}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is an AND requirement, which means that an Applicant must meet ALL of the specified sub-requirements.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Reason" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Reason}" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" Content="Primary" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="ALL of" FontSize="14"/>
                            <TextBlock Grid.Row="4" Grid.Column="1" Text="TODO" FontSize="14"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelRequirements:OrRequirement}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is an OR requirement, which means that an Applicant must meet ANY of the specified sub-requirements.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Reason" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Reason}" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" Content="Primary" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="ANY of" FontSize="14"/>
                            <TextBlock Grid.Row="4" Grid.Column="1" Text="TODO" FontSize="14"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelRequirements:XorRequirement}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is an XOR requirement, which means that an Applicant must meet EXACTLY ONE of the specified sub-requirements.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Reason" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Reason}" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" Content="Primary" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="ONE of" FontSize="14"/>
                            <TextBlock Grid.Row="4" Grid.Column="1" Text="TODO" FontSize="14"/>
                        </Grid>
                    </DataTemplate>
                </ContentControl.Resources>
            </ContentControl>
        </DockPanel>
        <Button Grid.Row="1" Width="200" Height="35" Margin="5" HorizontalAlignment="Left" Click="ResetToDefaults_Click">
            <TextBlock Text="Reset to default configuration"/>
        </Button>
        <StackPanel Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button IsCancel="True" Width="100" Height="35" Margin="5" Click="CancelButton_Click">
                <StackPanel Orientation="Horizontal">
                    <Image Source="/Icons/Cancel_grey.png" Width="16" Margin="2 0"/>
                    <TextBlock Text="Cancel" Margin="2 0"/>
                </StackPanel>
            </Button>
            <Button IsDefault="True" Width="100" Height="35" Margin="5" Click="SaveButton_Click">
                <StackPanel Orientation="Horizontal">
                    <Image Source="/Icons/Checkmark_blue.png" Width="16" Margin="2 0"/>
                    <TextBlock Text="Save" Margin="2 0"/>
                </StackPanel>
            </Button>
        </StackPanel>
    </Grid>
</local:SubPage>
