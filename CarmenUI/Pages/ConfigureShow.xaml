<local:SubPage
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
    x:Class="CarmenUI.Pages.ConfigureShow"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:CarmenUI.Pages"
    xmlns:uc="clr-namespace:CarmenUI.UserControls"
    xmlns:cv="clr-namespace:CarmenUI.Converters"
    xmlns:modelCriterias="clr-namespace:Carmen.ShowModel.Criterias;assembly=Carmen.ShowModel"
    xmlns:modelRequirements="clr-namespace:Carmen.ShowModel.Requirements;assembly=Carmen.ShowModel"
    xmlns:modelStructure="clr-namespace:Carmen.ShowModel.Structure;assembly=Carmen.ShowModel"
    xmlns:modelApplicants="clr-namespace:Carmen.ShowModel.Applicants;assembly=Carmen.ShowModel"
    mc:Ignorable="d"
    d:DesignHeight="600" d:DesignWidth="800"
    Title="Configure Show" Loaded="Page_Loaded">
    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="booleanToVisibility"/>
        <cv:BooleanToIndex x:Key="booleanToIndex"/>
        <CollectionViewSource x:Key="alternativeCastsViewSource" IsLiveSortingRequested="True"/>
        <CollectionViewSource x:Key="criteriasSelectionSource" IsLiveSortingRequested="True"/>
        <CollectionViewSource x:Key="castGroupsViewSource" IsLiveSortingRequested="True"/>
        <CollectionViewSource x:Key="tagsSelectionSource"  IsLiveSortingRequested="True"/>
        <CollectionViewSource x:Key="requirementsSelectionSource" IsLiveSortingRequested="True"/>
        <CollectionViewSource x:Key="showRootSource"/>
        <cv:SparseCountByGroups x:Key="sparseCountByGroups"/>
        <cv:InvertBoolean x:Key="inverseBoolean"/>
        <ObjectDataProvider x:Key="genderEnumValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="modelApplicants:Gender"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <CollectionViewSource x:Key="listSortDirectionEnumSource"/>
        <cv:MinimumIntValue x:Key="minimumIntValue"/>
        <cv:SelectableRequirementsList x:Key="selectableRequirementsList"/>
        <cv:HideIfNullOrType x:Key="hideIfNullOrType"/>
        <cv:MultiConverter x:Key="falseIfNullDefaultValue">
            <cv:TrueIfNullDefaultValue/>
            <cv:InvertBoolean/>
        </cv:MultiConverter>
        <cv:HideIfNull x:Key="hideIfNull"/>
        <cv:MultiConverter x:Key="showIfNull">
            <cv:TrueIfNull/>
            <BooleanToVisibilityConverter/>
        </cv:MultiConverter>
        <cv:TrueIfNonZero x:Key="trueIfNonZero"/>
    </Page.Resources>
    <Grid Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition x:Name="objectPanelColumn" Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <DockPanel Margin="5">
            <TextBlock DockPanel.Dock="Top" Text="Configuration" FontSize="22"/>
            <ListBox x:Name="configList" FontSize="16" BorderThickness="0">
                <ListBoxItem Selected="ShowRoot_Selected">
                    <TextBlock Text="Show details..."/>
                </ListBoxItem>
                <ListBoxItem Selected="Criteria_Selected">
                    <TextBlock Text="Audition cast based on..."/>
                </ListBoxItem>
                <ListBoxItem Selected="CastGroups_Selected">
                    <TextBlock Text="Select cast into..."/>
                </ListBoxItem>
                <ListBoxItem Selected="AlternativeCasts_Selected">
                    <TextBlock Text="With alternating casts..."/>
                </ListBoxItem>
                <ListBoxItem Selected="Tags_Selected">
                    <TextBlock Text="Apply tags to cast members..."/>
                </ListBoxItem>
                <ListBoxItem Selected="SectionTypes_Selected">
                    <TextBlock Text="Structure items into..."/>
                </ListBoxItem>
                <ListBoxItem Selected="Requirements_Selected">
                    <TextBlock Text="Allocate roles based on..."/>
                </ListBoxItem>
            </ListBox>
        </DockPanel>
        <DockPanel Grid.Column="1" Margin="5">
            <TextBlock DockPanel.Dock="Top" x:Name="objectHeading" FontSize="22"/>
            <ItemsControl DockPanel.Dock="Bottom" x:Name="objectAddButtons" KeyboardNavigation.IsTabStop="False">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel KeyboardNavigation.IsTabStop="False"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ItemsControl DockPanel.Dock="Bottom" ItemsSource="{Binding}" KeyboardNavigation.IsTabStop="False">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Rows="1" Margin="-5 0 0 0"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Button Click="AddObjectButton_Click" Margin="5 5 0 0">
                                        <TextBlock Text="{Binding AddButtonText}" TextWrapping="Wrap" HorizontalAlignment="Center" Margin="5"/>
                                    </Button>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <UniformGrid x:Name="moveButtons" DockPanel.Dock="Bottom" Rows="1" Margin="0 5 0 0" Height="30">
                <Button x:Name="moveUpButton" Margin="0 0 2.5 0" Click="moveUpButton_Click">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Icons/Upload_grey.png" Width="16" Margin="2 0"/>
                        <TextBlock Text="Move Up" Margin="2 0"/>
                    </StackPanel>
                </Button>
                <Button x:Name="moveDownButton" Margin="2.5 0 0 0" Click="moveDownButton_Click">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Icons/Download_grey.png" Width="16" Margin="2 0"/>
                        <TextBlock Text="Move Down" Margin="2 0"/>
                    </StackPanel>
                </Button>
            </UniformGrid>
            <ListBox x:Name="objectList" FontSize="16" ScrollViewer.HorizontalScrollBarVisibility="Disabled" PreviewKeyDown="objectList_PreviewKeyDown" SelectionChanged="objectList_SelectionChanged">
                <ListBox.Resources>
                    <DataTemplate DataType="{x:Type modelStructure:ShowRoot}">
                        <TextBlock Text="Details for the current show"/>
                    </DataTemplate>
                </ListBox.Resources>
            </ListBox>
        </DockPanel>
        <DockPanel x:Name="editPanel" Grid.Column="2" Margin="5" DataContext="{Binding ElementName=objectList,Path=SelectedItem}">
            <TextBlock DockPanel.Dock="Top" Text="{Binding Name, StringFormat='Editing: \{0\}'}" FontSize="22"/>
            <Button DockPanel.Dock="Bottom" Height="30" Click="DeleteObject_Click"
                    Visibility="{Binding Converter={StaticResource hideIfNullOrType}, ConverterParameter={x:Type modelStructure:ShowRoot}}">
                <TextBlock Text="{Binding Name, StringFormat='Delete &quot;\{0\}&quot;'}"/>
            </Button>
            <ContentControl Content="{Binding}" KeyboardNavigation.IsTabStop="False">
                <ContentControl.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="0 0 0 5"/>
                        <Setter Property="FontSize" Value="14"/>
                    </Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Margin" Value="5 0 0 5"/>
                        <Setter Property="FontSize" Value="14"/>
                    </Style>
                    <Style TargetType="CheckBox">
                        <Setter Property="Margin" Value="5 0 0 5"/>
                        <Setter Property="FontSize" Value="14"/>
                    </Style>
                    <Style TargetType="ComboBox">
                        <Setter Property="Margin" Value="5 0 0 5"/>
                        <Setter Property="FontSize" Value="14"/>
                    </Style>
                    <DataTemplate DataType="{x:Type modelCriterias:NumericCriteria}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is a numeric criteria, for which an Applicant can be given a whole number mark between 0 and a maximum value, inclusive.
                                If set to required, this criteria must be entered for every applicant.
                                If set to primary, this criteria will be shown on the role allocation screen.
                                The weight specifies the importance of this criteria in calculating applicants overall ability.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <CheckBox Grid.Row="2" Grid.Column="1" IsChecked="{Binding Required}" FontSize="14" Content="Required" VerticalContentAlignment="Center"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" FontSize="14" Content="Primary" VerticalContentAlignment="Center"/>
                            <TextBlock Grid.Row="4" Text="Weight" FontSize="14"/>
                            <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding Weight}" FontSize="14"/>
                            <TextBlock Grid.Row="5" Text="Maximum" FontSize="14"/>
                            <TextBox Grid.Row="5" Grid.Column="1" Text="{Binding MaxMark}" FontSize="14"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelCriterias:SelectCriteria}">
                        <Grid Margin="0 5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14" Margin="0 0 0 5">
                                This is a list criteria, for which an Applicant can be marked as having a value selected from a list.
                                The 'mark' an Applicant receives for a list criteria is a number representing the position of the selected value within the list, where the 1st option is 0.
                                The maximum this 'mark' will be is N-1, where N is the number of options.
                                If set to required, this criteria must be entered for every applicant.
                                If set to primary, this criteria will be shown on the role allocation screen.
                                The weight specifies the importance of this criteria in calculating applicants overall ability.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Grid.ColumnSpan="2" TextWrapping="Wrap" FontStyle="Italic" FontSize="12"  Margin="0 0 0 10">
                                NOTE: Changing or re-ordering the options for this criteria is only changing the text which is shown, the Applicant's 'mark' number is not updated when the options are changed, so care must be taken when updating this criteria after Applicant's marks have been entered.
                            </TextBlock>
                            <TextBlock Grid.Row="2" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Name}" Margin="5 0 0 5" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Required}" FontSize="14" Content="Required" VerticalContentAlignment="Center"/>
                            <CheckBox Grid.Row="4" Grid.Column="1" IsChecked="{Binding Primary}" FontSize="14" Content="Primary" VerticalContentAlignment="Center"/>
                            <TextBlock Grid.Row="5" Text="Weight" FontSize="14"/>
                            <TextBox Grid.Row="5" Grid.Column="1" Text="{Binding Weight}" FontSize="14"/>
                            <uc:EditableList Grid.Row="6" Grid.ColumnSpan="2" FontSize="14" Title="List of options:" MinimumCount="2" ItemsSource="{Binding Options, Mode=TwoWay}"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelCriterias:BooleanCriteria}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is a tick criteria, like a Yes/No question, for which an Applicant can either be marked Yes or No.
                                If set to required, this criteria must be entered for every applicant.
                                If set to primary, this criteria will be shown on the role allocation screen.
                                The weight specifies the importance of this criteria in calculating applicants overall ability.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <CheckBox Grid.Row="2" Grid.Column="1" IsChecked="{Binding Required}" FontSize="14" Content="Required" VerticalContentAlignment="Center"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" FontSize="14" Content="Primary" VerticalContentAlignment="Center"/>
                            <TextBlock Grid.Row="4" Text="Weight" FontSize="14"/>
                            <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding Weight}" FontSize="14"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelApplicants:CastGroup}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                During the cast selection process, Applicants will be selected into a Cast Group.
                                Each Applicant can be in only one Cast Group, and not being in a Cast Group is an indication of an Applicant being rejected.
                                At least one Cast Group, such as the default Cast Group called "Cast", is required.
                                NOTE: In order to alternate casts, at least 2 alternative casts must be defined.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Abbreviation" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Abbreviation}" FontSize="14"/>
                            <TextBlock Grid.Row="3" Text="Required Count" FontSize="14"/>
                            <Grid Grid.Row="3" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Text="{Binding RequiredCount, TargetNullValue=''}" FontSize="14"/>
                                <TextBlock Grid.Column="1" Text="{Binding Source={StaticResource alternativeCastsViewSource}, Path=Count, StringFormat=' x {0}'}"
                                           Visibility="{Binding AlternateCasts, Converter={StaticResource booleanToVisibility}}"
                                           FontSize="14"/>
                            </Grid>
                            <CheckBox Grid.Row="4" Grid.Column="1" IsChecked="{Binding AlternateCasts}" FontSize="14" Content="Alternate Casts" VerticalContentAlignment="Center"
                                      IsEnabled="{Binding Source={StaticResource alternativeCastsViewSource}, Path=Count, Converter={StaticResource minimumIntValue}, ConverterParameter=2}"/>
                            <TextBlock Grid.Row="5" Text="Requirements" FontSize="14"/>
                            <ListView Grid.Row="5" Grid.Column="1" FontSize="14"
                                      x:Name="requirementsList"
                                      Margin="5 0 0 5"
                                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                      ItemsSource="{Binding Requirements, Converter={StaticResource selectableRequirementsList}, ConverterParameter={StaticResource requirementsSelectionSource}}">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}">
                                        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsSelected}"
                                                  Width="{Binding ElementName=requirementsList, Path=ActualWidth}"
                                                  Content="{Binding ObjectValue.Name}" VerticalAlignment="Center"/>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelApplicants:AlternativeCast}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                If any Cast Groups are set to "Alternate Casts" then these Alternative Casts are the casts which they alternate between.
                                There must be at least two Alternative Casts in order to enable "Alternate Casts" on a Cast Group.
                                The Initial will be appended to the applicant's cast number to indicate which alternate cast they are in.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14" LostFocus="Name_LostFocus"/>
                            <TextBlock Grid.Row="2" Text="Initial" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Initial}" FontSize="14"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelApplicants:Tag}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                A tag can be applied to a successful Applicant to indicate that form part of a special team, or have an external attribute, such as wearing a microphone.
                                An Applicant can have many tags.
                                If a required count is not set, all applicants of that cast group which meet the requirements will get this tag.
                                If no requirements are set, this tag will not be applied automatically.
                                As with all counts, the required count is the number of cast members required per alternative cast.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14" LostFocus="Name_LostFocus"/>
                            <TextBlock Grid.Row="2" Text="Description" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Description}" FontSize="14"/>
                            <TextBlock Grid.Row="3" Text="Icon" FontSize="14"/>
                            <uc:EditableImage Grid.Row="3" Grid.Column="1" Margin="5 0 0 0" HorizontalAlignment="Left"
                                              ImageObject="{Binding Icon, Mode=TwoWay}"
                                              Width="50" Height="50"/>
                            <TextBlock Grid.Row="4" Grid.ColumnSpan="2" Text="Required Counts:" FontSize="14"/>
                            <ItemsControl Grid.Row="5" ItemsSource="{Binding Source={StaticResource castGroupsViewSource}}"
                                          KeyboardNavigation.IsTabStop="False">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="1"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}" FontSize="14"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <ItemsControl Grid.Row="5" Grid.Column="1" ItemsSource="{Binding CountByGroups, Converter={StaticResource sparseCountByGroups}, ConverterParameter={StaticResource castGroupsViewSource}}"
                                          KeyboardNavigation.IsTabStop="False">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="1"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBox Grid.Column="1" Text="{Binding Count, TargetNullValue=''}" FontSize="14"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <TextBlock Grid.Row="6" Text="Requirements" FontSize="14"/>
                            <ListView Grid.Row="6" Grid.Column="1" FontSize="14"
                                      x:Name="requirementsList"
                                      Margin="5 0 0 5"
                                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                      ItemsSource="{Binding Requirements, Converter={StaticResource selectableRequirementsList}, ConverterParameter={StaticResource requirementsSelectionSource}}">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}">
                                        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsSelected}"
                                                  Width="{Binding ElementName=requirementsList, Path=ActualWidth}"
                                                  Content="{Binding ObjectValue.Name}" VerticalAlignment="Center"/>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelStructure:SectionType}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This defines a type of Section which can be used to add structure to the items in your show.
                                This allows the show structure to match your chosen terminology, but also to contain different business logic about the number of roles per person within a Section.
                                At least one Section Type, such as the default Section Type called "Section", is required.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14" LostFocus="Name_LostFocus"/>
                            <CheckBox Grid.Row="2" Grid.ColumnSpan="2" IsChecked="{Binding AllowNoRoles, Converter={StaticResource inverseBoolean}}" FontSize="14" Content="Everyone must have a role" VerticalContentAlignment="Center"/>
                            <CheckBox Grid.Row="3" Grid.ColumnSpan="2" IsChecked="{Binding AllowMultipleRoles}" FontSize="14" Content="A person can have multiple roles" VerticalContentAlignment="Center"/>
                            <CheckBox Grid.Row="4" Grid.ColumnSpan="2" IsEnabled="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.AllowConsecutiveItems}" IsChecked="{Binding AllowConsecutiveItems, Converter={StaticResource inverseBoolean}}" FontSize="14" Content="Avoid roles in consecutive items" VerticalContentAlignment="Center"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelStructure:ShowRoot}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="DatePicker">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is the root block of show settings, which define your show.
                                The show date will be used to calculate the age of applicants.
                                The cast number order option allows you to pick which Audition Criteria is used to determine the automatic cast numbering order.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Show Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Show Date" FontSize="14" VerticalAlignment="Center"/>
                            <DatePicker Grid.Row="2" Grid.Column="1" SelectedDate="{Binding ShowDate}" FontSize="14"/>
                            <TextBlock Grid.Row="3" Text="Cast Number Order" FontSize="14" VerticalAlignment="Center"/>
                            <ComboBox Grid.Row="3" Grid.Column="1" FontSize="14" SelectedItem="{Binding CastNumberOrderBy, TargetNullValue='Overall ability'}">
                                <ComboBox.Resources>
                                    <DataTemplate DataType="{x:Type modelCriterias:SelectCriteria}">
                                        <TextBlock Text="{Binding Path=Name}"/>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type modelCriterias:NumericCriteria}">
                                        <TextBlock Text="{Binding Path=Name}"/>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type modelCriterias:BooleanCriteria}">
                                        <TextBlock Text="{Binding Path=Name}"/>
                                    </DataTemplate>
                                </ComboBox.Resources>
                                <ComboBox.ItemsSource>
                                    <CompositeCollection>
                                        <sys:String>Overall ability</sys:String>
                                        <CollectionContainer Collection="{Binding Source={StaticResource criteriasSelectionSource}}"/>
                                    </CompositeCollection>
                                </ComboBox.ItemsSource>
                            </ComboBox>
                            <TextBlock Grid.Row="4" Text="Cast Number Direction" FontSize="14" VerticalAlignment="Center"/>
                            <ComboBox Grid.Row="4" Grid.Column="1" SelectedItem="{Binding CastNumberOrderDirection}" ItemsSource="{Binding Source={StaticResource listSortDirectionEnumSource}}" FontSize="14"/>
                            <CheckBox Grid.Row="5" Grid.ColumnSpan="2" IsChecked="{Binding AllowConsecutiveItems, Converter={StaticResource inverseBoolean}}" FontSize="14" Content="Avoid roles in consecutive items across the entire show" VerticalContentAlignment="Center"/>
                            <TextBlock Grid.Row="6" Text="Existing Role Costs" FontSize="14" VerticalAlignment="Center"/>
                            <ComboBox Grid.Row="6" Grid.Column="1" FontSize="14" SelectedIndex="{Binding WeightExistingRoleCosts, Converter={StaticResource booleanToIndex}}">
                                <ComboBox.Items>
                                    <sys:String>Subtract from the applicant's final suitability (after taking the weighted average of the role's requirements)</sys:String>
                                    <sys:String>Subtract from each requirement's suitability (before taking the weighted average of the role's requirements)</sys:String>
                                </ComboBox.Items>
                            </ComboBox>
                            <TextBlock Grid.Row="7" Text="Company Logo" FontSize="14"/>
                            <uc:EditableImage Grid.Row="7" Grid.Column="1" Margin="5 0 0 0" HorizontalAlignment="Left"
                                              ImageObject="{Binding Logo, Mode=TwoWay}"
                                              x:Name="LogoImage" MinWidth="{Binding ElementName=LogoImage, Path=ActualHeight}"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelRequirements:AbilityExactRequirement}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                    <Setter Property="FontSize" Value="14"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                    <Setter Property="FontSize" Value="14"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is an Exact Ability requirement, which means that an Applicant must have a specific Mark in the specified Criteria.
                                If set to primary, this requirement will be shown on the role allocation screen.
                                The requirement weight specifies the importance of this requirement in calculating applicants suitability for a role.
                                If disabled, this requirement will not be used in determining the applicants suitability percentage.
                                The overall ability weight specifies the importance of the applicants overall ability in calculating the suitability for a role, and can either be specified as one value for all roles, or individually per requirement.
                                If the existing roles cost is enabled, it determines how many percentage points will be subtracted from an applicants suitability for each role which they are already allocated requiring this criteria.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Reason" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Reason}" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" Content="Primary" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="Requirement Weight" FontSize="14"/>
                            <Grid Grid.Row="4" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Text="{Binding SuitabilityWeight}" FontSize="14" IsEnabled="{Binding SuitabilityWeight, Converter={StaticResource trueIfNonZero}}"/>
                                <CheckBox Grid.Column="1" IsChecked="{Binding SuitabilityWeight, Converter={StaticResource trueIfNonZero}}" Content="Enabled" FontSize="14"/>
                            </Grid>
                            <TextBlock Grid.Row="5" Text="Overall Ability Weight" FontSize="14"/>
                            <Grid Grid.Row="5" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Visibility="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource showIfNull}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding OverallWeight}" FontSize="14" IsEnabled="{Binding OverallWeight, Converter={StaticResource trueIfNonZero}}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding OverallWeight, Converter={StaticResource trueIfNonZero}, ConverterParameter=0.1}" Content="Enabled" FontSize="14"/>
                                </Grid>
                                <Grid Visibility="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource hideIfNull}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight}" FontSize="14" IsEnabled="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource trueIfNonZero}}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource trueIfNonZero}, ConverterParameter=0.1}" Content="Enabled" FontSize="14"/>
                                </Grid>
                                <CheckBox Grid.Column="1" IsChecked="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight,
                                    Converter={StaticResource falseIfNullDefaultValue}, ConverterParameter=0.1}" FontSize="14"  Content="Same for all"/>
                            </Grid>
                            <TextBlock Grid.Row="6" Text="Criteria" FontSize="14"/>
                            <ComboBox Grid.Row="6" Grid.Column="1" FontSize="14" SelectedItem="{Binding Criteria}" ItemsSource="{Binding Source={StaticResource criteriasSelectionSource}}" DisplayMemberPath="Name" />
                            <TextBlock Grid.Row="7" Text="Existing Roles Cost" FontSize="14"/>
                            <Grid Grid.Row="7" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Text="{Binding ExistingRoleCost}" FontSize="14" IsEnabled="{Binding ExistingRoleCost, Converter={StaticResource trueIfNonZero}}"/>
                                <TextBlock Grid.Column="1" Text="% per role"/>
                                <CheckBox Grid.Column="2" IsChecked="{Binding ExistingRoleCost, Converter={StaticResource trueIfNonZero}}" Content="Enabled" FontSize="14"/>
                            </Grid>
                            <TextBlock Grid.Row="8" Text="Required Value" FontSize="14"/>
                            <uc:CriteriaMarkSelector Grid.Row="8" Grid.Column="1" Mark="{Binding RequiredValue, Mode=TwoWay}" Criteria="{Binding Criteria}" VerticalAlignment="Center"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelRequirements:AbilityRangeRequirement}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                    <Setter Property="FontSize" Value="14"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                    <Setter Property="FontSize" Value="14"/>
                                </Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                    <Setter Property="FontSize" Value="14"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is an Ability Range requirement, which means that an Applicant must have a Mark within a range for the specified Criteria.
                                If set to primary, this requirement will be shown on the role allocation screen.
                                The requirement weight specifies the importance of this requirement in calculating applicants suitability for a role.
                                If disabled, this requirement will not be used in determining the applicants suitability percentage.
                                The overall ability weight specifies the importance of the applicants overall ability in calculating the suitability for a role, and can either be specified as one value for all roles, or individually per requirement.
                                If the existing roles cost is enabled, it determines how many percentage points will be subtracted from an applicants suitability for each role which they are already allocated requiring this criteria.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Reason" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Reason}" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" Content="Primary" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="Requirement Weight" FontSize="14"/>
                            <Grid Grid.Row="4" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Text="{Binding SuitabilityWeight}" FontSize="14" IsEnabled="{Binding SuitabilityWeight, Converter={StaticResource trueIfNonZero}}"/>
                                <CheckBox Grid.Column="1" IsChecked="{Binding SuitabilityWeight, Converter={StaticResource trueIfNonZero}}" Content="Enabled" FontSize="14"/>
                            </Grid>
                            <TextBlock Grid.Row="5" Text="Overall Ability Weight" FontSize="14"/>
                            <Grid Grid.Row="5" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Visibility="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource showIfNull}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding OverallWeight}" FontSize="14" IsEnabled="{Binding OverallWeight, Converter={StaticResource trueIfNonZero}}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding OverallWeight, Converter={StaticResource trueIfNonZero}, ConverterParameter=0.1}" Content="Enabled" FontSize="14"/>
                                </Grid>
                                <Grid Visibility="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource hideIfNull}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight}" FontSize="14" IsEnabled="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource trueIfNonZero}}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource trueIfNonZero}, ConverterParameter=0.1}" Content="Enabled" FontSize="14"/>
                                </Grid>
                                <CheckBox Grid.Column="1" IsChecked="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight,
                                    Converter={StaticResource falseIfNullDefaultValue}, ConverterParameter=0.1}" FontSize="14"  Content="Same for all"/>
                            </Grid>
                            <TextBlock Grid.Row="6" Text="Criteria" FontSize="14"/>
                            <ComboBox Grid.Row="6" Grid.Column="1" FontSize="14" SelectedItem="{Binding Criteria}" ItemsSource="{Binding Source={StaticResource criteriasSelectionSource}}" DisplayMemberPath="Name"/>
                            <TextBlock Grid.Row="7" Text="Existing Roles Cost" FontSize="14"/>
                            <Grid Grid.Row="7" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Text="{Binding ExistingRoleCost}" FontSize="14" IsEnabled="{Binding ExistingRoleCost, Converter={StaticResource trueIfNonZero}}"/>
                                <TextBlock Grid.Column="1" Text="% per role"/>
                                <CheckBox Grid.Column="2" IsChecked="{Binding ExistingRoleCost, Converter={StaticResource trueIfNonZero}}" Content="Enabled" FontSize="14"/>
                            </Grid>
                            <TextBlock Grid.Row="8" Text="Minimum" FontSize="14"/>
                            <uc:CriteriaMarkSelector Grid.Row="8" Grid.Column="1" Mark="{Binding Minimum, Mode=TwoWay}" Criteria="{Binding Criteria}" VerticalAlignment="Center"/>
                            <TextBlock Grid.Row="9" Text="Maximum" FontSize="14"/>
                            <uc:CriteriaMarkSelector Grid.Row="9" Grid.Column="1" Mark="{Binding Maximum, Mode=TwoWay}" Criteria="{Binding Criteria}" VerticalAlignment="Center"/>
                            <CheckBox Grid.Row="10" Grid.Column="1" VerticalContentAlignment="Center" Content="Higher is better" IsChecked="{Binding ScaleSuitability}"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelRequirements:AgeRequirement}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                    <Setter Property="FontSize" Value="14"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                    <Setter Property="FontSize" Value="14"/>
                                </Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                    <Setter Property="FontSize" Value="14"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is an Age requirement, which means that an Applicant must have an age within the specified range.
                                If set to primary, this requirement will be shown on the role allocation screen.
                                The requirement weight specifies the importance of this requirement in calculating applicants suitability for a role.
                                If disabled, this requirement will not be used in determining the applicants suitability percentage.
                                The overall ability weight specifies the importance of the applicants overall ability in calculating the suitability for a role, and can either be specified as one value for all roles, or individually per requirement.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Reason" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Reason}" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" Content="Primary" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="Requirement Weight" FontSize="14"/>
                            <Grid Grid.Row="4" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Text="{Binding SuitabilityWeight}" FontSize="14" IsEnabled="{Binding SuitabilityWeight, Converter={StaticResource trueIfNonZero}}"/>
                                <CheckBox Grid.Column="1" IsChecked="{Binding SuitabilityWeight, Converter={StaticResource trueIfNonZero}}" Content="Enabled" FontSize="14"/>
                            </Grid>
                            <TextBlock Grid.Row="5" Text="Overall Ability Weight" FontSize="14"/>
                            <Grid Grid.Row="5" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Visibility="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource showIfNull}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding OverallWeight}" FontSize="14" IsEnabled="{Binding OverallWeight, Converter={StaticResource trueIfNonZero}}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding OverallWeight, Converter={StaticResource trueIfNonZero}, ConverterParameter=0.1}" Content="Enabled" FontSize="14"/>
                                </Grid>
                                <Grid Visibility="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource hideIfNull}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight}" FontSize="14" IsEnabled="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource trueIfNonZero}}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource trueIfNonZero}, ConverterParameter=0.1}" Content="Enabled" FontSize="14"/>
                                </Grid>
                                <CheckBox Grid.Column="1" IsChecked="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight,
                                    Converter={StaticResource falseIfNullDefaultValue}, ConverterParameter=0.1}" FontSize="14"  Content="Same for all"/>
                            </Grid>
                            <TextBlock Grid.Row="6" Text="Minimum Age" FontSize="14"/>
                            <TextBox Grid.Row="6" Grid.Column="1" Text="{Binding Minimum, TargetNullValue=''}" FontSize="14"/>
                            <TextBlock Grid.Row="7" Text="Maximum Age" FontSize="14"/>
                            <TextBox Grid.Row="7" Grid.Column="1" Text="{Binding Maximum, TargetNullValue=''}" FontSize="14"/>
                            <CheckBox Grid.Row="8" Grid.Column="1" VerticalContentAlignment="Center" Content="Higher is better" IsChecked="{Binding ScaleSuitability}"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelRequirements:GenderRequirement}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is a Gender requirement, which means that an Applicant must be the specified gender.
                                If set to primary, this requirement will be shown on the role allocation screen.
                                The requirement weight specifies the importance of this requirement in calculating applicants suitability for a role.
                                If disabled, this requirement will not be used in determining the applicants suitability percentage.
                                The overall ability weight specifies the importance of the applicants overall ability in calculating the suitability for a role, and can either be specified as one value for all roles, or individually per requirement.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Reason" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Reason}" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" Content="Primary" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="Requirement Weight" FontSize="14"/>
                            <Grid Grid.Row="4" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Text="{Binding SuitabilityWeight}" FontSize="14" IsEnabled="{Binding SuitabilityWeight, Converter={StaticResource trueIfNonZero}}"/>
                                <CheckBox Grid.Column="1" IsChecked="{Binding SuitabilityWeight, Converter={StaticResource trueIfNonZero}}" Content="Enabled" FontSize="14"/>
                            </Grid>
                            <TextBlock Grid.Row="5" Text="Overall Ability Weight" FontSize="14"/>
                            <Grid Grid.Row="5" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Visibility="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource showIfNull}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding OverallWeight}" FontSize="14" IsEnabled="{Binding OverallWeight, Converter={StaticResource trueIfNonZero}}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding OverallWeight, Converter={StaticResource trueIfNonZero}, ConverterParameter=0.1}" Content="Enabled" FontSize="14"/>
                                </Grid>
                                <Grid Visibility="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource hideIfNull}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight}" FontSize="14" IsEnabled="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource trueIfNonZero}}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource trueIfNonZero}, ConverterParameter=0.1}" Content="Enabled" FontSize="14"/>
                                </Grid>
                                <CheckBox Grid.Column="1" IsChecked="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight,
                                    Converter={StaticResource falseIfNullDefaultValue}, ConverterParameter=0.1}" FontSize="14"  Content="Same for all"/>
                            </Grid>
                            <TextBlock Grid.Row="6" Text="Gender" FontSize="14"/>
                            <ComboBox Grid.Row="6" Grid.Column="1" SelectedIndex="{Binding RequiredValue}" ItemsSource="{Binding Source={StaticResource genderEnumValues}}"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelRequirements:TagRequirement}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is a Tag requirement, which means that an Applicant must be assigned the specified tag.
                                If set to primary, this requirement will be shown on the role allocation screen.
                                The requirement weight specifies the importance of this requirement in calculating applicants suitability for a role.
                                If disabled, this requirement will not be used in determining the applicants suitability percentage.
                                The overall ability weight specifies the importance of the applicants overall ability in calculating the suitability for a role, and can either be specified as one value for all roles, or individually per requirement.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Reason" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Reason}" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" Content="Primary" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="Requirement Weight" FontSize="14"/>
                            <Grid Grid.Row="4" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Text="{Binding SuitabilityWeight}" FontSize="14" IsEnabled="{Binding SuitabilityWeight, Converter={StaticResource trueIfNonZero}}"/>
                                <CheckBox Grid.Column="1" IsChecked="{Binding SuitabilityWeight, Converter={StaticResource trueIfNonZero}}" Content="Enabled" FontSize="14"/>
                            </Grid>
                            <TextBlock Grid.Row="5" Text="Overall Ability Weight" FontSize="14"/>
                            <Grid Grid.Row="5" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Visibility="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource showIfNull}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding OverallWeight}" FontSize="14" IsEnabled="{Binding OverallWeight, Converter={StaticResource trueIfNonZero}}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding OverallWeight, Converter={StaticResource trueIfNonZero}, ConverterParameter=0.1}" Content="Enabled" FontSize="14"/>
                                </Grid>
                                <Grid Visibility="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource hideIfNull}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight}" FontSize="14" IsEnabled="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource trueIfNonZero}}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource trueIfNonZero}, ConverterParameter=0.1}" Content="Enabled" FontSize="14"/>
                                </Grid>
                                <CheckBox Grid.Column="1" IsChecked="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight,
                                    Converter={StaticResource falseIfNullDefaultValue}, ConverterParameter=0.1}" FontSize="14"  Content="Same for all"/>
                            </Grid>
                            <TextBlock Grid.Row="6" Text="Required Tag" FontSize="14"/>
                            <ComboBox Grid.Row="6" Grid.Column="1" SelectedItem="{Binding RequiredTag}" ItemsSource="{Binding Source={StaticResource tagsSelectionSource}}" DisplayMemberPath="Name"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelRequirements:NotRequirement}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is a NOT requirement, which means that an Applicant must not meet the specified requirement.
                                If set to primary, this requirement will be shown on the role allocation screen.
                                The requirement weight specifies the importance of this requirement in calculating applicants suitability for a role.
                                If disabled, this requirement will not be used in determining the applicants suitability percentage.
                                The overall ability weight specifies the importance of the applicants overall ability in calculating the suitability for a role, and can either be specified as one value for all roles, or individually per requirement.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Reason" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Reason}" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" Content="Primary" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="Requirement Weight" FontSize="14"/>
                            <Grid Grid.Row="4" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Text="{Binding SuitabilityWeight}" FontSize="14" IsEnabled="{Binding SuitabilityWeight, Converter={StaticResource trueIfNonZero}}"/>
                                <CheckBox Grid.Column="1" IsChecked="{Binding SuitabilityWeight, Converter={StaticResource trueIfNonZero}}" Content="Enabled" FontSize="14"/>
                            </Grid>
                            <TextBlock Grid.Row="5" Text="Overall Ability Weight" FontSize="14"/>
                            <Grid Grid.Row="5" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Visibility="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource showIfNull}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding OverallWeight}" FontSize="14" IsEnabled="{Binding OverallWeight, Converter={StaticResource trueIfNonZero}}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding OverallWeight, Converter={StaticResource trueIfNonZero}, ConverterParameter=0.1}" Content="Enabled" FontSize="14"/>
                                </Grid>
                                <Grid Visibility="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource hideIfNull}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight}" FontSize="14" IsEnabled="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource trueIfNonZero}}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource trueIfNonZero}, ConverterParameter=0.1}" Content="Enabled" FontSize="14"/>
                                </Grid>
                                <CheckBox Grid.Column="1" IsChecked="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight,
                                    Converter={StaticResource falseIfNullDefaultValue}, ConverterParameter=0.1}" FontSize="14"  Content="Same for all"/>
                            </Grid>
                            <TextBlock Grid.Row="6" Text="NOT" FontSize="14"/>
                            <ComboBox Grid.Row="6" Grid.Column="1" SelectedItem="{Binding SubRequirement}" ItemsSource="{Binding Source={StaticResource requirementsSelectionSource}}" DisplayMemberPath="Name"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelRequirements:AndRequirement}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is an AND requirement, which means that an Applicant must meet ALL of the specified sub-requirements.
                                If set to primary, this requirement will be shown on the role allocation screen.
                                The requirement weight specifies the importance of this requirement in calculating applicants suitability for a role.
                                If disabled, this requirement will not be used in determining the applicants suitability percentage.
                                The overall ability weight specifies the importance of the applicants overall ability in calculating the suitability for a role, and can either be specified as one value for all roles, or individually per requirement.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Reason" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Reason}" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" Content="Primary" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="Requirement Weight" FontSize="14"/>
                            <Grid Grid.Row="4" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Text="{Binding SuitabilityWeight}" FontSize="14" IsEnabled="{Binding SuitabilityWeight, Converter={StaticResource trueIfNonZero}}"/>
                                <CheckBox Grid.Column="1" IsChecked="{Binding SuitabilityWeight, Converter={StaticResource trueIfNonZero}}" Content="Enabled" FontSize="14"/>
                            </Grid>
                            <TextBlock Grid.Row="5" Text="Overall Ability Weight" FontSize="14"/>
                            <Grid Grid.Row="5" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Visibility="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource showIfNull}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding OverallWeight}" FontSize="14" IsEnabled="{Binding OverallWeight, Converter={StaticResource trueIfNonZero}}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding OverallWeight, Converter={StaticResource trueIfNonZero}, ConverterParameter=0.1}" Content="Enabled" FontSize="14"/>
                                </Grid>
                                <Grid Visibility="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource hideIfNull}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight}" FontSize="14" IsEnabled="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource trueIfNonZero}}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource trueIfNonZero}, ConverterParameter=0.1}" Content="Enabled" FontSize="14"/>
                                </Grid>
                                <CheckBox Grid.Column="1" IsChecked="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight,
                                    Converter={StaticResource falseIfNullDefaultValue}, ConverterParameter=0.1}" FontSize="14"  Content="Same for all"/>
                            </Grid>
                            <TextBlock Grid.Row="6" Text="ALL of" FontSize="14"/>
                            <ListView Grid.Row="6" Grid.Column="1" FontSize="14"
                                      x:Name="requirementsList"
                                      Margin="5 0 0 5"
                                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                      ItemsSource="{Binding SubRequirements, Converter={StaticResource selectableRequirementsList}, ConverterParameter={StaticResource requirementsSelectionSource}}">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}">
                                        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsSelected}"
                                                  Width="{Binding ElementName=requirementsList, Path=ActualWidth}"
                                                  Content="{Binding ObjectValue.Name}" VerticalAlignment="Center"/>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelRequirements:OrRequirement}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is an OR requirement, which means that an Applicant must meet ANY of the specified sub-requirements.
                                If set to primary, this requirement will be shown on the role allocation screen.
                                The requirement weight specifies the importance of this requirement in calculating applicants suitability for a role.
                                If disabled, this requirement will not be used in determining the applicants suitability percentage.
                                The overall ability weight specifies the importance of the applicants overall ability in calculating the suitability for a role, and can either be specified as one value for all roles, or individually per requirement.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Reason" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Reason}" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" Content="Primary" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="Requirement Weight" FontSize="14"/>
                            <Grid Grid.Row="4" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Text="{Binding SuitabilityWeight}" FontSize="14" IsEnabled="{Binding SuitabilityWeight, Converter={StaticResource trueIfNonZero}}"/>
                                <CheckBox Grid.Column="1" IsChecked="{Binding SuitabilityWeight, Converter={StaticResource trueIfNonZero}}" Content="Enabled" FontSize="14"/>
                            </Grid>
                            <TextBlock Grid.Row="5" Text="Overall Ability Weight" FontSize="14"/>
                            <Grid Grid.Row="5" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Visibility="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource showIfNull}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding OverallWeight}" FontSize="14" IsEnabled="{Binding OverallWeight, Converter={StaticResource trueIfNonZero}}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding OverallWeight, Converter={StaticResource trueIfNonZero}, ConverterParameter=0.1}" Content="Enabled" FontSize="14"/>
                                </Grid>
                                <Grid Visibility="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource hideIfNull}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight}" FontSize="14" IsEnabled="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource trueIfNonZero}}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource trueIfNonZero}, ConverterParameter=0.1}" Content="Enabled" FontSize="14"/>
                                </Grid>
                                <CheckBox Grid.Column="1" IsChecked="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight,
                                    Converter={StaticResource falseIfNullDefaultValue}, ConverterParameter=0.1}" FontSize="14"  Content="Same for all"/>
                            </Grid>
                            <TextBlock Grid.Row="6" Text="ANY of" FontSize="14"/>
                            <ListView Grid.Row="6" Grid.Column="1" FontSize="14"
                                      x:Name="requirementsList"
                                      Margin="5 0 0 5"
                                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                      ItemsSource="{Binding SubRequirements, Converter={StaticResource selectableRequirementsList}, ConverterParameter={StaticResource requirementsSelectionSource}}">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}">
                                        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsSelected}"
                                                  Width="{Binding ElementName=requirementsList, Path=ActualWidth}"
                                                  Content="{Binding ObjectValue.Name}" VerticalAlignment="Center"/>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type modelRequirements:XorRequirement}">
                        <Grid Margin="0 5">
                            <Grid.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0 0 0 5"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5 0 0 5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" FontSize="14">
                                This is an XOR requirement, which means that an Applicant must meet EXACTLY ONE of the specified sub-requirements.
                                If set to primary, this requirement will be shown on the role allocation screen.
                                The requirement weight specifies the importance of this requirement in calculating applicants suitability for a role.
                                If disabled, this requirement will not be used in determining the applicants suitability percentage.
                                The overall ability weight specifies the importance of the applicants overall ability in calculating the suitability for a role, and can either be specified as one value for all roles, or individually per requirement.
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="Name" FontSize="14"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}" FontSize="14"/>
                            <TextBlock Grid.Row="2" Text="Reason" FontSize="14"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Reason}" FontSize="14"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding Primary}" Content="Primary" FontSize="14"/>
                            <TextBlock Grid.Row="4" Text="Requirement Weight" FontSize="14"/>
                            <Grid Grid.Row="4" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Text="{Binding SuitabilityWeight}" FontSize="14" IsEnabled="{Binding SuitabilityWeight, Converter={StaticResource trueIfNonZero}}"/>
                                <CheckBox Grid.Column="1" IsChecked="{Binding SuitabilityWeight, Converter={StaticResource trueIfNonZero}}" Content="Enabled" FontSize="14"/>
                            </Grid>
                            <TextBlock Grid.Row="5" Text="Overall Ability Weight" FontSize="14"/>
                            <Grid Grid.Row="5" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Visibility="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource showIfNull}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding OverallWeight}" FontSize="14" IsEnabled="{Binding OverallWeight, Converter={StaticResource trueIfNonZero}}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding OverallWeight, Converter={StaticResource trueIfNonZero}, ConverterParameter=0.1}" Content="Enabled" FontSize="14"/>
                                </Grid>
                                <Grid Visibility="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource hideIfNull}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight}" FontSize="14" IsEnabled="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource trueIfNonZero}}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight, Converter={StaticResource trueIfNonZero}, ConverterParameter=0.1}" Content="Enabled" FontSize="14"/>
                                </Grid>
                                <CheckBox Grid.Column="1" IsChecked="{Binding Source={StaticResource showRootSource}, Path=CurrentItem.CommonOverallWeight,
                                    Converter={StaticResource falseIfNullDefaultValue}, ConverterParameter=0.1}" FontSize="14"  Content="Same for all"/>
                            </Grid>
                            <TextBlock Grid.Row="6" Text="ONE of" FontSize="14"/>
                            <ListView Grid.Row="6" Grid.Column="1" FontSize="14"
                                      x:Name="requirementsList"
                                      Margin="5 0 0 5"
                                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                      ItemsSource="{Binding SubRequirements, Converter={StaticResource selectableRequirementsList}, ConverterParameter={StaticResource requirementsSelectionSource}}">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}">
                                        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsSelected}"
                                                  Width="{Binding ElementName=requirementsList, Path=ActualWidth}"
                                                  Content="{Binding ObjectValue.Name}" VerticalAlignment="Center"/>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Grid>
                    </DataTemplate>
                </ContentControl.Resources>
            </ContentControl>
        </DockPanel>
        <Button Grid.Row="1" Width="180" Height="35" Margin="5" HorizontalAlignment="Left" Click="ImportShowConfiguration_Click">
            <TextBlock Text="Import show configuration"/>
        </Button>
        <StackPanel Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button IsCancel="True" Width="100" Height="35" Margin="5" Click="CancelButton_Click">
                <StackPanel Orientation="Horizontal">
                    <Image Source="/Icons/Cancel_grey.png" Width="16" Margin="2 0"/>
                    <TextBlock Text="Cancel" Margin="2 0"/>
                </StackPanel>
            </Button>
            <Button IsDefault="False" Width="100" Height="35" Margin="5" Click="SaveButton_Click">
                <StackPanel Orientation="Horizontal">
                    <Image Source="/Icons/Checkmark_blue.png" Width="16" Margin="2 0"/>
                    <TextBlock Text="Save" Margin="2 0"/>
                </StackPanel>
            </Button>
        </StackPanel>
    </Grid>
</local:SubPage>
