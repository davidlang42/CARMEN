<Window x:Class="DatabaseExplorer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DatabaseExplorer"
        xmlns:modelApplicants="clr-namespace:ShowModel.Applicants;assembly=ShowModel"
        xmlns:modelCriterias="clr-namespace:ShowModel.Criterias;assembly=ShowModel"
        xmlns:modelRequirements="clr-namespace:ShowModel.Requirements;assembly=ShowModel"
        xmlns:modelStructure="clr-namespace:ShowModel.Structure;assembly=ShowModel"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="CARMEN: Database Explorer" Height="600" Width="800">
    <Window.Resources>
        <CollectionViewSource x:Key="applicantsViewSource"/>
        <CollectionViewSource x:Key="castGroupsViewSource"/>
        <CollectionViewSource x:Key="alternativeCastsViewSource"/>
        <CollectionViewSource x:Key="tagsViewSource"/>
        <CollectionViewSource x:Key="rootNodesViewSource"/>
        <CollectionViewSource x:Key="itemsViewSource"/>
        <CollectionViewSource x:Key="criteriaViewSource"/>
        <CollectionViewSource x:Key="requirementsViewSource"/>
        <CollectionViewSource x:Key="requirementsSelectionSource"/>
        <CollectionViewSource x:Key="imagesViewSource"/>
        <CollectionViewSource x:Key="sectionTypesViewSource"/>
        <CollectionViewSource x:Key="identifiersViewSource"/>
        <local:CallbackCommand x:Key="addNodeCommand"/>
        <local:CallbackCommand x:Key="addCriteriaCommand"/>
        <local:CallbackCommand x:Key="addRequirementCommand"/>
        <local:CallbackCommand x:Key="uploadImageCommand"/>
        <local:CallbackCommand x:Key="pasteImageCommand"/>
        <local:SortIOrdered x:Key="sortIOrdered" />
        <local:BytesToImage x:Key="bytesToImage"/>
        <ObjectDataProvider x:Key="genderEnumValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="modelApplicants:Gender"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <DataTemplate DataType="{x:Type modelRequirements:Requirement}">
            <TextBlock Text="{Binding Path=Name}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type modelApplicants:Tag}">
            <TextBlock Text="{Binding Path=Name}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type modelApplicants:AlternativeCast}">
            <TextBlock Text="{Binding Path=Name}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type modelStructure:Item}">
            <TextBlock Text="{Binding Path=Name}"/>
        </DataTemplate>
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_Create" Click="CreateMenu_Click"/>
                <MenuItem Header="_Open" Click="OpenMenu_Click"/>
                <Separator />
                <MenuItem Header="_Save" Click="SaveMenu_Click" IsEnabled="False"/>
                <MenuItem Header="_Revert" Click="RevertMenu_Click" IsEnabled="False"/>
                <Separator />
                <MenuItem Header="_Exit" Click="ExitMenu_Click"/>
            </MenuItem>
            <MenuItem Header="_Tools" IsEnabled="False">
                <MenuItem Header="Add _Test Data" Click="TestDataMenu_Click" />
                <MenuItem Header="_Clear Database" Click="ClearDataMenu_Click" />
            </MenuItem>
        </Menu>
        <TabControl ScrollViewer.HorizontalScrollBarVisibility="Auto" IsEnabled="False">
            <TabItem Header="Show Structure">
                <DockPanel>
                    <TreeView DockPanel.Dock="Left" x:Name="itemsTreeView" Margin="5" KeyDown="itemsTreeView_KeyDown"
                              ItemsSource="{Binding Source={StaticResource rootNodesViewSource}}"
                              MinWidth="150" MaxWidth="300" AllowDrop="True"
                              PreviewMouseLeftButtonDown="itemsTreeView_PreviewMouseLeftButtonDown"
                              MouseMove="itemsTreeView_MouseMove" 
                              DragOver="itemsTreeView_DragOver" 
                              Drop="itemsTreeView_Drop">
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type modelStructure:ShowRoot}" ItemsSource="{Binding Children, Converter={StaticResource sortIOrdered}}">
                                <TextBlock Text="{Binding Path=Name, StringFormat='Show: {0}'}"/>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type modelStructure:Section}" ItemsSource="{Binding Children, Converter={StaticResource sortIOrdered}}">
                                <TextBlock Text="{Binding Path=Name, StringFormat='Section: {0}'}"/>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type modelStructure:Item}">
                                <TextBlock Text="{Binding Path=Name, StringFormat='Item: {0}'}"/>
                            </HierarchicalDataTemplate>
                        </TreeView.Resources>
                        <TreeView.ContextMenu>
                            <ContextMenu>
                                <ContextMenu.ItemsSource>
                                    <CompositeCollection>
                                        <MenuItem Header="Add Item" Command="{Binding Source={StaticResource addNodeCommand}}"/>
                                        <CollectionContainer Collection="{Binding Source={StaticResource sectionTypesViewSource}}"/>
                                    </CompositeCollection>
                                </ContextMenu.ItemsSource>
                                <ContextMenu.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <Run Text="Add"/>
                                            <Run Text="{Binding Name}"/>
                                        </TextBlock>
                                    </DataTemplate>
                                </ContextMenu.ItemTemplate>
                                <ContextMenu.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="Command" Value="{Binding Source={StaticResource addNodeCommand}}"/>
                                        <Setter Property="CommandParameter" Value="{Binding}"/>
                                    </Style>
                                </ContextMenu.ItemContainerStyle>
                            </ContextMenu>
                        </TreeView.ContextMenu>
                    </TreeView>
                    <ContentControl DockPanel.Dock="Bottom" DataContext="{Binding ElementName=itemsTreeView, Path=SelectedItem}" Content="{Binding}" Margin="5">
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type modelStructure:ShowRoot}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Show Name:" Grid.Column="0"/>
                                    <TextBox Text="{Binding Name}" Grid.Column="1"/>
                                    <Label Content="Show Date:" Grid.Column="2"/>
                                    <DatePicker SelectedDate="{Binding ShowDate}" Grid.Column="3"/>
                                    <Label Content="Logo:" Grid.Column="4"/>
                                    <ComboBox SelectedItem="{Binding Logo}" ItemsSource="{Binding Source={StaticResource imagesViewSource}}" DisplayMemberPath="Name" Grid.Column="5"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type modelStructure:Section}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Section Name:" Grid.Column="0"/>
                                    <TextBox Text="{Binding Name}" Grid.Column="1"/>
                                    <Label Content="Section Type:" Grid.Column="2"/>
                                    <ComboBox SelectedItem="{Binding SectionType}" ItemsSource="{Binding Source={StaticResource sectionTypesViewSource}}" DisplayMemberPath="Name" Grid.Column="3"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type modelStructure:Item}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Item Name:" Grid.Column="0"/>
                                    <TextBox Text="{Binding Name}" Grid.Column="1"/>
                                </Grid>
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                    <DataGrid x:Name="nodeCountsDataGrid" AutoGenerateColumns="False" 
                        EnableRowVirtualization="True" 
                        ItemsSource="{Binding ElementName=itemsTreeView, Path=SelectedItem.CountByGroups}" 
                        RowDetailsVisibilityMode="VisibleWhenSelected" Margin="5" CanUserAddRows="True">
                        <DataGrid.Columns>
                            <DataGridComboBoxColumn SelectedItemBinding="{Binding CastGroup}" ItemsSource="{Binding Source={StaticResource castGroupsViewSource}}" Header="Cast Group" DisplayMemberPath="Name"/>
                            <DataGridTextColumn Binding="{Binding Count}" Header="Count"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </TabItem>
            <TabItem Header="Section Types">
                <DataGrid x:Name="sectionTypesDataGrid" AutoGenerateColumns="False" 
                        EnableRowVirtualization="True" 
                        ItemsSource="{Binding Source={StaticResource sectionTypesViewSource}}" 
                        RowDetailsVisibilityMode="VisibleWhenSelected" Margin="5">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="Section Type Name"/>
                        <DataGridComboBoxColumn SelectedItemBinding="{Binding Icon}" ItemsSource="{Binding Source={StaticResource imagesViewSource}}" Header="Icon" DisplayMemberPath="Name"/>
                        <DataGridCheckBoxColumn Binding="{Binding AllowMultipleRoles}" Header="Allow Multiple Roles"/>
                        <DataGridCheckBoxColumn Binding="{Binding AllowNoRoles}" Header="Allow No Roles"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="Item Roles">
                <DockPanel>
                    <ComboBox DockPanel.Dock="Top" x:Name="itemsComboBox" Margin="5" ItemsSource="{Binding Source={StaticResource itemsViewSource}}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type modelStructure:Item}">
                                <TextBlock Text="{Binding Path=Name}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <DataGrid x:Name="rolesDataGrid" AutoGenerateColumns="False" 
                    EnableRowVirtualization="True" 
                    ItemsSource="{Binding ElementName=itemsComboBox, Path=SelectedItem.Roles}" 
                    RowDetailsVisibilityMode="VisibleWhenSelected" Margin="5">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Name}" Header="Role Name" Width="*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <local:SelectableListControl Grid.Column="1" SelectedItems="{Binding ElementName=rolesDataGrid, Path=SelectedItem.Items}"
                                                    AvailableItems="{Binding Source={StaticResource itemsViewSource}}"
                                                    Title="Items:" Margin="5"/>
                        <DataGrid Grid.Row="1" x:Name="roleCountsDataGrid" AutoGenerateColumns="False" 
                    EnableRowVirtualization="True" 
                    ItemsSource="{Binding ElementName=rolesDataGrid, Path=SelectedItem.CountByGroups}" 
                    RowDetailsVisibilityMode="VisibleWhenSelected" Margin="5" CanUserAddRows="True">
                            <DataGrid.Columns>
                                <DataGridComboBoxColumn SelectedItemBinding="{Binding CastGroup}" ItemsSource="{Binding Source={StaticResource castGroupsViewSource}}" Header="Cast Group" DisplayMemberPath="Name"/>
                                <DataGridTextColumn Binding="{Binding Count}" Header="Count"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <local:SelectableListControl Grid.Row="1" Grid.Column="1" SelectedItems="{Binding ElementName=rolesDataGrid, Path=SelectedItem.Requirements}"
                                                    AvailableItems="{Binding Source={StaticResource requirementsViewSource}}"
                                                    Title="Requirements:" Margin="5"/>
                    </Grid>
                </DockPanel>
            </TabItem>
            <TabItem Header="Applicants">
                <DockPanel>
                    <local:SelectableListControl DockPanel.Dock="Bottom" MaxHeight="130" SelectedItems="{Binding ElementName=applicantsDataGrid, Path=SelectedItem.Tags}"
                                                     AvailableItems="{Binding Source={StaticResource tagsViewSource}}"
                                                     Title="Tags:" Margin="5"/>
                    <Grid DockPanel.Dock="Bottom" MaxHeight="120">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <DataGrid x:Name="abilitiesDataGrid" AutoGenerateColumns="False" 
                        EnableRowVirtualization="True" 
                        ItemsSource="{Binding ElementName=applicantsDataGrid, Path=SelectedItem.Abilities}" 
                        RowDetailsVisibilityMode="VisibleWhenSelected" Margin="5" CanUserAddRows="True">
                            <DataGrid.Columns>
                                <DataGridComboBoxColumn SelectedItemBinding="{Binding Criteria}" ItemsSource="{Binding Source={StaticResource criteriaViewSource}}" Header="Criteria" DisplayMemberPath="Name"/>
                                <DataGridTextColumn Binding="{Binding Mark}" Header="Mark"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <DataGrid Grid.Column="1" x:Name="identitiesDataGrid" AutoGenerateColumns="False" 
                        EnableRowVirtualization="True" 
                        ItemsSource="{Binding ElementName=applicantsDataGrid, Path=SelectedItem.Identities}" 
                        RowDetailsVisibilityMode="VisibleWhenSelected" Margin="5" CanUserAddRows="True">
                            <DataGrid.Columns>
                                <DataGridComboBoxColumn SelectedItemBinding="{Binding Identifier}" ItemsSource="{Binding Source={StaticResource identifiersViewSource}}" Header="Identifier" DisplayMemberPath="Name"/>
                                <DataGridTextColumn Binding="{Binding Prefix}" Header="Prefix"/>
                                <DataGridTextColumn Binding="{Binding Number}" Header="Number"/>
                                <DataGridTextColumn Binding="{Binding Suffix}" Header="Suffix"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                    <DataGrid x:Name="applicantsDataGrid" AutoGenerateColumns="False" 
                        EnableRowVirtualization="True" 
                        ItemsSource="{Binding Source={StaticResource applicantsViewSource}}" 
                        RowDetailsVisibilityMode="VisibleWhenSelected" Margin="5">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding FirstName}" Header="First Name"/>
                            <DataGridTextColumn Binding="{Binding LastName}" Header="Last Name"/>
                            <DataGridComboBoxColumn SelectedItemBinding="{Binding Gender}" ItemsSource="{Binding Source={StaticResource genderEnumValues}}" Header="Gender"/>
                            <DataGridTemplateColumn Header="Date of Birth" Width="120">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DateOfBirth, StringFormat=dd/MM/yyyy}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding DateOfBirth, StringFormat=dd/MM/yyyy}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridComboBoxColumn SelectedItemBinding="{Binding Photo}" ItemsSource="{Binding Source={StaticResource imagesViewSource}}" Header="Photo" DisplayMemberPath="Name"/>
                            <DataGridComboBoxColumn SelectedItemBinding="{Binding CastGroup}" ItemsSource="{Binding Source={StaticResource castGroupsViewSource}}" Header="Cast Group" DisplayMemberPath="Name"/>
                            <DataGridTextColumn Binding="{Binding CastNumber}" Header="Cast Number"/>
                            <DataGridComboBoxColumn SelectedItemBinding="{Binding AlternativeCast}" ItemsSource="{Binding Source={StaticResource alternativeCastsViewSource}}" Header="Alt. Cast" DisplayMemberPath="Name"/>
                            <DataGridTextColumn Binding="{Binding Notes}" Header="Notes" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </TabItem>
            <TabItem Header="Identifiers">
                <DockPanel>
                    <local:SelectableListControl DockPanel.Dock="Bottom" MaxHeight="300" SelectedItems="{Binding ElementName=identifiersDataGrid, Path=SelectedItem.Requirements}"
                                                     AvailableItems="{Binding Source={StaticResource requirementsViewSource}}"
                                                     Title="Requirements:" Margin="5" />
                    <DataGrid x:Name="identifiersDataGrid" AutoGenerateColumns="False" 
                        EnableRowVirtualization="True" 
                        ItemsSource="{Binding Source={StaticResource identifiersViewSource}}" 
                        RowDetailsVisibilityMode="VisibleWhenSelected" Margin="5">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Name}" Header="Identifier Name"/>
                            <DataGridTextColumn Binding="{Binding Order}" Header="Order"/>
                            <DataGridTextColumn Binding="{Binding DefaultPrefix}" Header="Default Prefix"/>
                            <DataGridTextColumn Binding="{Binding AssignNumbersFrom}" Header="Auto-Assign Numbers Starting From"/>
                            <DataGridTextColumn Binding="{Binding DefaultSuffix}" Header="Default Suffix"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </TabItem>
            <TabItem Header="Criteria">
                <DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" MaxHeight="300" DataContext="{Binding ElementName=criteriaDataGrid, Path=SelectedItem}" Content="{Binding}" Margin="5">
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type modelCriterias:NumericCriteria}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Maximum value of Numeric Criteria:" Grid.Column="0"/>
                                    <TextBox Text="{Binding MaxMark}" Grid.Column="1"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type modelCriterias:SelectCriteria}">
                                <local:EditableListControl Title="Selectable options for Select Criteria:"
                                                               ItemsSource="{Binding ElementName=criteriaDataGrid, Path=SelectedItem.Options, Mode=TwoWay}"/>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type modelCriterias:BooleanCriteria}">
                                <TextBlock>Yes/No Criteria</TextBlock>
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                    <DataGrid x:Name="criteriaDataGrid" AutoGenerateColumns="False" 
                        EnableRowVirtualization="True" 
                        ItemsSource="{Binding Source={StaticResource criteriaViewSource}}" 
                        RowDetailsVisibilityMode="VisibleWhenSelected" Margin="5">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Name}" Header="Criteria Name"/>
                            <DataGridTextColumn Binding="{Binding Order}" Header="Order"/>
                            <DataGridTextColumn Binding="{Binding Description}" Header="Description"/>
                            <DataGridTextColumn Binding="{Binding MaxMark}" Header="Max Mark" IsReadOnly="True"/>
                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Add Numeric Criteria" Command="{Binding Source={StaticResource addCriteriaCommand}}"
                                          CommandParameter="NumericCriteria"/>
                                <MenuItem Header="Add Select Criteria" Command="{Binding Source={StaticResource addCriteriaCommand}}"
                                          CommandParameter="SelectCriteria"/>
                                <MenuItem Header="Add Yes/No Criteria" Command="{Binding Source={StaticResource addCriteriaCommand}}"
                                          CommandParameter="BooleanCriteria"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>
                </DockPanel>
            </TabItem>
            <TabItem Header="Alternative Casts">
                <DockPanel>
                    <DataGrid x:Name="alternativeCastsDataGrid" AutoGenerateColumns="False" 
                        EnableRowVirtualization="True" 
                        ItemsSource="{Binding Source={StaticResource alternativeCastsViewSource}}" 
                        RowDetailsVisibilityMode="VisibleWhenSelected" Margin="5">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Name}" Header="Alternative Cast Name"/>
                            <DataGridTextColumn Binding="{Binding Initial}" Header="Initial"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </TabItem>
            <TabItem Header="Cast Groups">
                <DockPanel>
                    <local:SelectableListControl DockPanel.Dock="Bottom" MaxHeight="200" SelectedItems="{Binding ElementName=castGroupsDataGrid, Path=SelectedItem.Requirements}"
                                                     AvailableItems="{Binding Source={StaticResource requirementsViewSource}}"
                                                     Title="Requirements:" Margin="5"/>
                    <local:SelectableListControl DockPanel.Dock="Bottom" MaxHeight="100" SelectedItems="{Binding ElementName=castGroupsDataGrid, Path=SelectedItem.AlternativeCasts}"
                                                     AvailableItems="{Binding Source={StaticResource alternativeCastsViewSource}}"
                                                     Title="Alternative Casts:" Margin="5"/>
                    <DataGrid x:Name="castGroupsDataGrid" AutoGenerateColumns="False" 
                        EnableRowVirtualization="True" 
                        ItemsSource="{Binding Source={StaticResource castGroupsViewSource}}" 
                        RowDetailsVisibilityMode="VisibleWhenSelected" Margin="5">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Name}" Header="Cast Group Name"/>
                            <DataGridTextColumn Binding="{Binding Order}" Header="Order"/>
                            <DataGridCheckBoxColumn Binding="{Binding Primary}" Header="Primary"/>
                            <DataGridTextColumn Binding="{Binding RequiredCount}" Header="Required Count"/>
                            <DataGridComboBoxColumn SelectedItemBinding="{Binding Icon}" ItemsSource="{Binding Source={StaticResource imagesViewSource}}" Header="Icon" DisplayMemberPath="Name"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </TabItem>
            <TabItem Header="Requirements">
                <DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" MaxHeight="300" DataContext="{Binding ElementName=requirementsDataGrid, Path=SelectedItem}" Content="{Binding}" Margin="5">
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type modelRequirements:AbilityExactRequirement}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Criteria:" Grid.Column="0"/>
                                    <ComboBox SelectedItem="{Binding Criteria}" ItemsSource="{Binding Source={StaticResource criteriaViewSource}}" DisplayMemberPath="Name" Grid.Column="1"/>
                                    <Label Content="Required Value:" Grid.Column="2"/>
                                    <local:CriteriaMarkControl Mark="{Binding RequiredValue}" Criteria="{Binding Criteria}" Grid.Column="3"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type modelRequirements:AbilityRangeRequirement}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Criteria:" Grid.Column="0"/>
                                    <ComboBox SelectedItem="{Binding Criteria}" ItemsSource="{Binding Source={StaticResource criteriaViewSource}}" DisplayMemberPath="Name" Grid.Column="1"/>
                                    <Label Content="Minimum:" Grid.Column="2"/>
                                    <local:CriteriaMarkControl Mark="{Binding Minimum}" Criteria="{Binding Criteria}" Grid.Column="3"/>
                                    <Label Content="Maximum:" Grid.Column="4"/>
                                    <local:CriteriaMarkControl Mark="{Binding Maximum}" Criteria="{Binding Criteria}" Grid.Column="5"/>
                                    <CheckBox VerticalAlignment="Center" Content="Higher is better" IsChecked="{Binding ScaleSuitability}" Grid.Column="6"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type modelRequirements:AgeRequirement}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Minimum Age:" Grid.Column="0"/>
                                    <TextBox Text="{Binding Minimum}" Grid.Column="1"/>
                                    <Label Content="Maximum Age:" Grid.Column="2"/>
                                    <TextBox Text="{Binding Maximum}" Grid.Column="3"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type modelRequirements:GenderRequirement}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Required Gender:" Grid.Column="0"/>
                                    <ComboBox Grid.Column="1" SelectedIndex="{Binding RequiredValue}" ItemsSource="{Binding Source={StaticResource genderEnumValues}}"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type modelRequirements:TagRequirement}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Required Tag:" Grid.Column="0"/>
                                    <ComboBox Grid.Column="1" SelectedItem="{Binding RequiredTag}" ItemsSource="{Binding Source={StaticResource tagsViewSource}}"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type modelRequirements:NotRequirement}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Not Requirement:" Grid.Column="0"/>
                                    <ComboBox Grid.Column="1" SelectedItem="{Binding SubRequirement}" ItemsSource="{Binding Source={StaticResource requirementsSelectionSource}}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type modelRequirements:Requirement}">
                                                <TextBlock Text="{Binding Name}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type modelRequirements:AndRequirement}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <CheckBox IsChecked="{Binding AverageSuitability}" Content="Average Suitability? (otherwise product)"/>
                                    <local:SelectableListControl Grid.Row="1" SelectedItems="{Binding ElementName=requirementsDataGrid, Path=SelectedItem.SubRequirements}"
                                                     AvailableItems="{Binding Source={StaticResource requirementsSelectionSource}}"
                                                     Title="AND Requirements:" ItemDisplayMemberPath="Name"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type modelRequirements:OrRequirement}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <CheckBox IsChecked="{Binding AverageSuitability}" Content="Average Suitability? (otherwise maximum)"/>
                                    <local:SelectableListControl Grid.Row="1" SelectedItems="{Binding ElementName=requirementsDataGrid, Path=SelectedItem.SubRequirements}"
                                                     AvailableItems="{Binding Source={StaticResource requirementsSelectionSource}}"
                                                     Title="OR Requirements:" ItemDisplayMemberPath="Name"/>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type modelRequirements:XorRequirement}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <local:SelectableListControl SelectedItems="{Binding ElementName=requirementsDataGrid, Path=SelectedItem.SubRequirements}"
                                                     AvailableItems="{Binding Source={StaticResource requirementsSelectionSource}}"
                                                     Title="XOR Requirements:" ItemDisplayMemberPath="Name"/>
                                </Grid>
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                    <DataGrid x:Name="requirementsDataGrid" AutoGenerateColumns="False" 
                        EnableRowVirtualization="True"
                        ItemsSource="{Binding Source={StaticResource requirementsViewSource}}" 
                        RowDetailsVisibilityMode="VisibleWhenSelected" Margin="5">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Name}" Header="Requirement Name"/>
                            <DataGridTextColumn Binding="{Binding Order}" Header="Order"/>
                            <DataGridCheckBoxColumn Binding="{Binding Primary}" Header="Primary"/>
                            <DataGridTextColumn Binding="{Binding Reason}" Header="Reason" Width="*"/>
                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Add Age Requirement" Command="{Binding Source={StaticResource addRequirementCommand}}"
                                          CommandParameter="AgeRequirement"/>
                                <MenuItem Header="Add Gender Requirement" Command="{Binding Source={StaticResource addRequirementCommand}}"
                                          CommandParameter="GenderRequirement"/>
                                <MenuItem Header="Add Cast Group Requirement" Command="{Binding Source={StaticResource addRequirementCommand}}"
                                          CommandParameter="CastGroupRequirement"/>
                                <MenuItem Header="Add Ability Range Requirement" Command="{Binding Source={StaticResource addRequirementCommand}}"
                                          CommandParameter="AbilityRangeRequirement"/>
                                <MenuItem Header="Add Exact Ability Requirement" Command="{Binding Source={StaticResource addRequirementCommand}}"
                                          CommandParameter="AbilityExactRequirement"/>
                                <MenuItem Header="Add NOT Requirement" Command="{Binding Source={StaticResource addRequirementCommand}}"
                                          CommandParameter="NotRequirement"/>
                                <MenuItem Header="Add AND Requirement" Command="{Binding Source={StaticResource addRequirementCommand}}"
                                          CommandParameter="AndRequirement"/>
                                <MenuItem Header="Add OR Requirement" Command="{Binding Source={StaticResource addRequirementCommand}}"
                                          CommandParameter="OrRequirement"/>
                                <MenuItem Header="Add XOR Requirement" Command="{Binding Source={StaticResource addRequirementCommand}}"
                                          CommandParameter="XorRequirement"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>
                </DockPanel>
            </TabItem>
            <TabItem Header="Images">
                <DockPanel>
                    <DataGrid DockPanel.Dock="Left" x:Name="imagesDataGrid" AutoGenerateColumns="False"
                              CanUserAddRows="False"
                        EnableRowVirtualization="True" 
                        ItemsSource="{Binding Source={StaticResource imagesViewSource}}" 
                        RowDetailsVisibilityMode="VisibleWhenSelected" Margin="5">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Name}" Header="Image Name"/>
                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Upload Image" Command="{Binding Source={StaticResource uploadImageCommand}}"/>
                                <MenuItem Header="Paste Image" Command="{Binding Source={StaticResource pasteImageCommand}}"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>
                    <Image Source="{Binding Source={StaticResource imagesViewSource}, Path=ImageData, Converter={StaticResource bytesToImage}}"/>
                </DockPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
